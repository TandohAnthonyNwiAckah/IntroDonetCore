@using IntroDonetCore.Models
@model IntroDonetCore.ViewModels.StudentViewModel


@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>


<div>
    <h4>Student</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Student.FirstName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Student.FirstName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Student.LastName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Student.LastName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Student.Gender)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Student.Gender)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Student.EnrollmentDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Student.EnrollmentDate)
        </dd>
    </dl>
</div>

<div>
    <a asp-action="Edit" asp-route-id="@Model.Student.StudentId">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>


@if (Model.Enrollments != null && Model.Enrollments.Count() != 0)
{
    <table class="table table-striped table-info table-responsive">

        <thead>
            <tr>
                <th>Title</th>
                <th>Grade</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var course in Model.Enrollments)
            {
                <tr>
                    <td>@course.Course.CourseName</td>
                    <td>@course.Grade</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <h3>@Model.Student.FirstName has not registered any courses</h3>

    <button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#ModalLoginForm">
        Register
    </button>
}